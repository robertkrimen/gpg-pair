#!/bin/bash

set -e -u

ACTION=
if [[ $# -ne 0 ]]
then
    ACTION=$1
    shift
fi

__TAR__=
if command -v gtar 1>/dev/null 2>&1
then
    __TAR__=gtar
else
    __TAR__=tar
fi

TAR=${TAR:-$__TAR__}
GPG=${GPG:-gpg}

case $ACTION in
    export)
        TARGET=
        if [[ $# -eq 1 && $1 == "*" ]]
        then
            TARGET=
        else
            TARGET=$@
        fi

        _TMP=$(mktemp -d .gpg-pair.XXXXXX)
        trap 'rm -rf "$_TMP"' EXIT

        NAME=$(gpg --with-colons --fixed-list-mode --list-keys $TARGET | grep ^sub: | awk -F : '{ print $5 }')
        if [[ -z "$NAME" ]]
        then
            echo "Error finding keys ($TARGET)" >&2
            exit 64
        fi
        NAME=$(echo $NAME | perl -e 'print join "+", map { substr $_, -8 } split m/\s+/, <STDIN>')
        $GPG --armor --export -- $TARGET > $_TMP/public
        $GPG --armor --export-secret-key -- $TARGET > $_TMP/secret
        $TAR -cf "$NAME.tar" -C $_TMP .
        echo "$NAME.tar"
    ;;
    import)
        _TMP=$(mktemp -d .gpg-pair.XXXXXX)
        trap 'rm -rf "$_TMP"' EXIT
        FILE=${1:--}
        $TAR -xf "$FILE" -C "$_TMP"
        gpg --import $_TMP/*
    ;;
    *)
        if [[ -n "$ACTION" ]]
        then
            echo "Unknown command: $ACTION" >&2
        fi
        cat <<_END_
Usage: gpg-pair ...

    export <identifier0> [identifier1] ... [identifierN]
    export *        # Export key or keys specified by each <identifier>
    export          # Export every key if nothing is specified or '*' is given
                    #
                    # Export is via the creation of a new .tar
                    # with the two files 'public' and 'secret'
                    # The name of the new .tar # is printed to STDOUT

    import <file>   # Import a .tar created by export
                    # Read the .tar from STDIN if <file> is '-'

For example:

    gpg-pair export                 # Export all keys (public & secret)
    gpg-pair export \*              # Also export all keys (public & secret)
    gpg-pair export Alice Bob /     # Export Alice, Bob, & Charlie keys
                    charlie@example.com  

    gpg-pair import -               # Import from a .tar via STDIN
    gpg-pair import                 # Same as above
    gpg-pair import DE4DB33F.tar    # Import from DE4DB33F.tar

---

# A tar with -O capability (files are written to stdout) is required for import
# You may need to specify a suitable tar (like GNU tar) with TAR=
# For example: TAR=gtar gpg-pair import ...
# gpg-pair will look for and automatically use gtar (if detected)

_END_
    ;;
esac
